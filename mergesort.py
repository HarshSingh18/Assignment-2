# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cw_xBigMdOe5twdocwP2SAlnsQ6Ofp0X
"""

class MergeSort:
    def __init__(self, array_str, delimiter=","):
        self.array = [int(x.strip()) for x in array_str.split(delimiter)]

    def merge(self, left, right):
        result = []
        i = j = 0

        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                result.append(left[i])
                i += 1
            else:
                result.append(right[j])
                j += 1

        while i < len(left):
            result.append(left[i])
            i += 1

        while j < len(right):
            result.append(right[j])
            j += 1

        return result

    def merge_sort(self, array):
        if len(array) <= 1:
            return array

        mid = len(array) // 2
        left_half = array[:mid]
        right_half = array[mid:]

        left_sorted = self.merge_sort(left_half)
        right_sorted = self.merge_sort(right_half)

        return self.merge(left_sorted, right_sorted)

    def sort(self):
        self.array = self.merge_sort(self.array)


if __name__ == "__main__":
    array_str = input("Enter the array as a string: ")
    merge_sort_instance = MergeSort(array_str)

    print("Original Array:", merge_sort_instance.array)
    merge_sort_instance.sort()
    print("Sorted Array:", merge_sort_instance.array)